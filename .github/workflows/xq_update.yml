name: xq_update
on: 
  push:
    branches:
      - 'actions-xq-update'
defaults:
  run:
    shell: bash
jobs:
  xqerl-cli-crud-ops:
    runs-on: ubuntu-latest
    services:
       xq:
        image: grantmacken/alpine-xqerl
        ports:
          - 8081:8081
        options: >-
          --name xq
          --mount "type=volume,target=/user/local/xqerl/priv/static/assets,source=static-assets"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: set up 
        run: |
          echo ' - set up xqerl project working environment'
          source .env
          echo -n ' - ${RUN_NAME} running: ' 
          docker container inspect -f '{{.State.Running}}' ${RUN_NAME}
          echo -n ' - xqerl application all started: '
          docker exec xq xqerl eval 'application:ensure_all_started(xqerl).' | grep -oP 'ok'
          mkdir -p $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          pushd $HOME/.local/bin && ln -s ${GITHUB_WORKSPACE}/bin/xq && popd
          make clean
          make escripts
          make main-modules
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username ${GITHUB_ACTOR} --password-stdin &> /dev/null
          make pull
      - name: Update  [ xq update {db-uri} rename ]
        run: |
          echo ' - update examples'
          echo ' - create works data'
          echo '> xq put example.com/examples/works.xml'
          xq put example.com/examples/works.xml
      - name:  update db document, with rename expression
        run: |
          echo ' update rename expression examples'
          echo ' - check first works node'
          xq get example.com/examples/works.xml '/works/*[1]'
          echo ' - rename emmployee tag to contractor'
          echo "> xq update example.com/examples/works.xml rename node '/works/*[1]' as '\"contactor\"'"
          xq update example.com/examples/works.xml rename node '/works/*[1]' as '"contactor"'
          echo ' - update result: check first works node'
          xq get example.com/examples/works.xml '/works/*[1]'
          echo ' - update result: check contractor hours'
          xq get example.com/examples/works.xml '//contactor/hours => sum()'
          echo ' - update result: check employee hours'
          xq get example.com/examples/works.xml '//employee/hours => sum()'
          echo ' - update result: check all hours worked'
          xq get example.com/examples/works.xml '/works/*/hours => sum()'

