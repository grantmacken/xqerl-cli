name: db_crud_ops
on: 
  push:
    branches:
      - 'xq-update'
jobs:
  xqerl-cli-crud-ops:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Github login in and pull helper github packages
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username ${GITHUB_ACTOR} --password-stdin &> /dev/null
          source .env
          docker pull docker.pkg.github.com/grantmacken/alpine-xqerl/xq:${GHPKG_VER} &> /dev/null
          echo -n ' - check available: '
          docker images | grep -oP 'alpine-xqerl'
          #echo -n ' - check available: '
          #docker images | grep -oP 'alpine-scour'
          #echo -n ' - check available: '
          #docker images | grep -oP 'alpine-zopfli'
          #echo -n ' - check available: '
          #docker images | grep -oP 'alpine-cmark-gfm'
      - name: Set up local bin
        run: |
          mkdir -p $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          pushd $HOME/.local/bin && ln -s ${GITHUB_WORKSPACE}/bin/xq && popd
          which xq
      - name: run xqerl in container
        run: |
          printf %60s | tr ' ' '-' && echo
          echo '> make up'
          make up
          printf %60s | tr ' ' '-' && echo && sleep 2
          echo ' - xq put {data-path} will store a data source as a db XDM item'
          echo '> xq put example.com/examples/employees.xml'
          xq put example.com/examples/employees.xml
          echo ' - xq list {db-path} lists db resources, including links'
          echo '> xq list example.com/examples'
          xq list example.com/examples
          printf %60s | tr ' ' '-' && echo
          echo ' - xq available {db-path} returns true or false'
          echo '> example.com/examples/employees.xml'
          bin/xq available example.com/examples/employees.xml
          printf %60s | tr ' ' '-' && echo
          echo ' - xq get {db-path} returns a serialized XDM item'
          echo ' - document-node XDM items will be serialized as XML strings'
          echo '> xq get example.com/examples/employees.xml'
          xq get example.com/examples/employees.xml
          printf %60s | tr ' ' '-' && echo
          echo ' - xq update {uri} {xpath} {key} {qualifier} {what}* '
          echo ' - consists of'
          echo '   1: selection part: {uri} {xpath}  '
          echo '   2: update part: {key} {qualifier} {what}*'
          echo '  where {key} is the update keyword [ insert | delete , replace | rename ]'
          echo '  where {qualifier} is [ node | nodes ]'
          echo "> xq update example.com/examples/employees.xml '/employees/employee[1]/email' rename node 'gmail'"
          xq update example.com/examples/employees.xml '/employees/employee[1]/email' rename node 'gmail'
          echo ">xq update example.com/examples/employees.xml '/employees/employee[1]/salary' delete node"
          xq update example.com/examples/employees.xml '/employees/employee[1]/salary' delete node
          xq get example.com/examples/employees.xml
          #echo ' - array and map XDM items will be serialized as JSON strings'
          #echo '> xq get example.com/examples/colors.array'
          #bin/xq get example.com/examples/colors.array
          printf %60s | tr ' ' '-' && echo
      - name: Stop running xqerl
        run: | 
          make down
          printf %60s | tr ' ' '-' && echo
#     - name: xq delete
#       run: |
#         echo '- xq delete {db-path} deletes XDM item from the db'
#         echo '> xq delete example.com/examples/employees.xml'
#         bin/xq delete example.com/examples/employees.xml
#         printf %60s | tr ' ' '-' && echo
#     - name: xq link
#       run: |
#         echo ' - xq CRUD database actions [ put list available get delete link  ] '
#         echo ' - all *static asset* sources are located in the "./src/static-assets/" directory'
#         echo ' - `xq link {domain} {path}` will store db link to a static asset file'
#         echo '> xq link example.com icons/article.svg'
#         xq link example.com icons/article.svg
#         echo '> xq link example.com icons/article.svg'
#         xq link example.com icons/article.svg
#         echo '> xq link example.com icons/note.svg'
#         xq link example.com icons/note.svg
