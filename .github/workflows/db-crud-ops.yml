name: db_crud_ops
on: 
  push:
    branches:
      - 'read-more'
jobs:
  xqerl-cli-crud-ops:
    runs-on: ubuntu-latest
    services:
       xq:
        image: grantmacken/alpine-xqerl
        ports:
        - 8081:8081
        # volumes: also env 
        options: --name xq
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Set up local bin
        shell: bash
        run: |
          mkdir -p $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          pushd $HOME/.local/bin && ln -s ${GITHUB_WORKSPACE}/bin/xq && popd
          which xq
          xq
      - name: check xq container
        shell: bash
        run: |
          docker ps
          sleep 3
          source .env
          echo -n ' - ${RUN_NAME} running: ' 
          docker container inspect -f '{{.State.Running}}' ${RUN_NAME}
          echo -n ' - xqerl application all started: '
          docker exec xq xqerl eval 'application:ensure_all_started(xqerl).' | grep -oP 'ok'
      - name: upload escripts
        shell: bash
        run: |
          make clean
          make escripts
          make main-modules
      - name: Github login in and pull helper github packages
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username ${GITHUB_ACTOR} --password-stdin &> /dev/null
          make pull-container-helpers
      - name:  Create Read Update Delete
        run: |
          echo ' create: put | link | plonk'
      - name: Create [ xq put {file} ]
        run: |
          echo ' - create employees data'
          echo '> xq put example.com/examples/employees.xml'
          xq put example.com/examples/employees.xml
          echo ' - create works data'
          echo '> xq put example.com/examples/works.xml'
          xq put example.com/examples/works.xml
          printf %60s | tr ' ' '-' && echo
          echo '> xq put example.com/examples/mildred.json'
          xq put example.com/examples/mildred.json
          printf %60s | tr ' ' '-' && echo
          echo '> xq put src/data/example.com/examples/colors.json'
          xq put src/data/example.com/examples/colors.json
          printf %60s | tr ' ' '-' && echo
          echo '> xq put src/data/example.com/examples/entry_exit.csv'
          xq put src/data/example.com/examples/entry_exit.csv
          printf %60s | tr ' ' '-' && echo
      - name: Create [ xq put ] with preprocess dockerized helpers
        run: |
          echo '> xq put src/data/example.com/content/index.md'
          xq put src/data/example.com/content/index.md
          printf %60s | tr ' ' '-' && echo
          echo '> xq put src/data/example.com/examples/hello-world.html'
          xq put src/data/example.com/examples/hello-world.html
          printf %60s | tr ' ' '-' && echo
      - name: Create [ xq link ] TODO
        run: echo 'TODO'
      - name: Create [ xq plonk ] TODO
        run: echo 'TODO'
      - name: Read xq CRUD ops
        run: echo "list, available, get, collect"
      - name:  Read [ xq list {db-uri} ]
        run: |
          echo '> xq list example.com/examples'
          xq list example.com/examples 
      - name:  Read [ xq availabe {db-uri} ]
        run: |
          echo '> xq available example.com/examples/colors.array'
          xq available example.com/examples/colors.array 
      - name:  Read [ xq get {db-uri} ]
        run: |
          echo '> xq get example.com/examples/employees.xml'
          xq get example.com/examples/employees.xml 
          printf %60s | tr ' ' '-' && echo
          echo '> xq get example.com/examples/colors.array'
          xq get example.com/examples/colors.array
          printf %60s | tr ' ' '-' && echo
          echo '> xq get example.com/examples/mildred.map'
          xq get example.com/examples/mildred.map
          printf %60s | tr ' ' '-' && echo
          


