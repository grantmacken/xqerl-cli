name: crud_ops
on: 
  push:
    branches:
      - 'crud-delete'
defaults:
  run:
    shell: bash
jobs:
  xqerl-cli-crud-ops:
    runs-on: ubuntu-latest
    services:
       xq:
        image: grantmacken/alpine-xqerl
        ports:
          - 8081:8081
        options: >-
          --name xq
          --mount "type=volume,target=/user/local/xqerl/priv/static/assets,source=static-assets"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: set up 
        run: |
          echo ' - set up xqerl project working environment'
          source .env
          echo -n ' - ${RUN_NAME} running: ' 
          docker container inspect -f '{{.State.Running}}' ${RUN_NAME}
          echo -n ' - xqerl application all started: '
          docker exec xq xqerl eval 'application:ensure_all_started(xqerl).' | grep -oP 'ok'
          mkdir -p $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          pushd $HOME/.local/bin && ln -s ${GITHUB_WORKSPACE}/bin/xq && popd
          make clean
          make escripts
          make main-modules
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com --username ${GITHUB_ACTOR} --password-stdin &> /dev/null
          make pull
      - name:  Create Read Update Delete
        run: |
          echo ' create: put | link | plonk'
      - name: Create [ xq put {file} ]
        run: |
          echo ' - create employees data'
          echo '> xq put example.com/examples/employees.xml'
          xq put example.com/examples/employees.xml
          echo ' - create works data'
          echo '> xq put example.com/examples/works.xml'
          xq put example.com/examples/works.xml
          printf %60s | tr ' ' '-' && echo
          echo '> xq put example.com/examples/mildred.json'
          xq put example.com/examples/mildred.json
          printf %60s | tr ' ' '-' && echo
          echo '> xq put src/data/example.com/examples/colors.json'
          xq put src/data/example.com/examples/colors.json
          printf %60s | tr ' ' '-' && echo
          echo '> xq put src/data/example.com/examples/entry_exit.csv'
          xq put src/data/example.com/examples/entry_exit.csv
          printf %60s | tr ' ' '-' && echo
      - name: Create [ xq put {file} ] with preprocess dockerized helpers
        run: |
          echo '> xq put src/data/example.com/content/index.md'
          xq put src/data/example.com/content/index.md
          printf %60s | tr ' ' '-' && echo
          echo '> xq put src/data/example.com/examples/hello-world.html'
          xq put src/data/example.com/examples/hello-world.html
          printf %60s | tr ' ' '-' && echo
      - name: Create [ xq link {file} ]
        run: |
          echo ' - examples of link creation'
          echo ' The `xq link` command will produce two outcomes.'
          echo '1. a binary asset on the static-assets container volume.' 
          echo '2. a db **link** to the file asset.' 
          echo ' The origin source may pass thru a "asset pipeline" ' 
          echo ' to produce a desired outcome like gzip compression' 
          printf %60s | tr ' ' '-' && echo
          echo '*example*: create db link to compressed svgz file.'
          echo '> xq link example.com icons/article.svg'
          xq link example.com icons/article.svg
          printf %60s | tr ' ' '-' && echo
          echo '*example*: create db link to gzipped js file'
          echo '> xq link example.com scripts/prism.js'
          xq link example.com scripts/prism.js
          printf %60s | tr ' ' '-' && echo
          echo '*example*: create db link to gzipped stylesheet'
          echo '> xq link example.com styles/index.css'
          xq link example.com styles/index.css
          printf %60s | tr ' ' '-' && echo
          echo '*example*: create db link to font'
          echo '> xq link example.com fonts/ibm-plex-mono-v5-latin-regular.woff2'
          xq link example.com fonts/ibm-plex-mono-v5-latin-regular.woff2
          printf %60s | tr ' ' '-' && echo
      - name: Create [ xq plonk ] TODO
        run: echo 'TODO'
      - name: Read xq CRUD ops
        run: echo "list, available, get, collect"
      - name:  Read [ xq list {db-uri} ]
        run: |
          echo '> xq list example.com/examples'
          xq list example.com/examples 
      - name:  Read [ xq availabe {db-uri} ]
        run: |
          echo '> xq available example.com/examples/colors.array'
          xq available example.com/examples/colors.array 
      - name:  Read [ xq get {db-uri} ]
        run: |
          echo '> xq get example.com/examples/employees.xml'
          xq get example.com/examples/employees.xml 
          printf %60s | tr ' ' '-' && echo
          echo '> xq get example.com/examples/colors.array'
          xq get example.com/examples/colors.array
          printf %60s | tr ' ' '-' && echo
          echo '> xq get example.com/examples/mildred.map'
          xq get example.com/examples/mildred.map
          printf %60s | tr ' ' '-' && echo
      - name:  Read [ xq get {db-uri} {xpath} ]
        run: |
          echo '> xq get example.com/examples/employees.xml \'
          echo "> '//employee[1]/name/string()'"
          xq get example.com/examples/employees.xml \
          '//employee[1]/name/string()'
          printf %60s | tr ' ' '-' && echo
      - name:  Read [ xq get {db-uri} {lookup} ]
        run: |
          echo '> xq get example.com/examples/mildred.map \' 
          echo "> '?address?town'"
          xq get example.com/examples/mildred.map '?address?town'
          printf %60s | tr ' ' '-' && echo
      - name:  Read [ xq get {db-uri} {xpath} {bang} ]
        run: |
          echo ' - list active employees'
          echo '> xq get example.com/examples/works.xml \' 
          echo "'> //employee[./status =\"active\"]' \ " 
          echo "> '! concat(./@name/string(), \" - \" , ./status/string())'"
          xq get example.com/examples/works.xml \
          '//employee[./status ="active"]' \
          '! concat(./@name/string(), " - " , ./status/string())'
          printf %60s | tr ' ' '-' && echo
      - name:  Read [ xq get {db-uri} {xpath} {arrow} ]
        run: |
          echo ' - total employee hours worked'
          echo '> xq get example.com/examples/works.xml \' 
          echo "'> //employee/hours' \ " 
          echo "> '=> sum()"
          xq get example.com/examples/works.xml \
          '//employee/hours' \
          '=> sum()'
      - name:  Read [ xq get {db-uri} {lookup} {arrow} ]
        run: |
          echo ' - view the number of colors in the color array'
          echo '> xq get example.com/examples/colors.array \' 
          echo "> '?*' \ " 
          echo "> '=>  count()' "
          xq get example.com/examples/colors.array '?*' '=>  count()'
          printf %60s | tr ' ' '-' && echo
      - name:  Read [ xq get {db-uri} {lookup} {bang} ]
        run: |
          echo ' - list all colors except Lilac'
          echo '> xq get example.com/examples/colors.array \' 
          echo "> '?*' '( .?color[not(. = \"Lilac\")] )'"
          xq get example.com/examples/colors.array \
          '?*' '! (.?color[not(. = "Lilac")])'
          printf %60s | tr ' ' '-' && echo
      - name:  Read [ xq get {db-uri} {bang} ]
        run: |
          echo ' - just bang without the lookup'
          echo ' - format the first and last name in the mildred.map'
          echo ' note: no lookup involved'
          printf %60s | tr ' ' '-' && echo
          echo '> xq get example.com/examples/mildred.map \' 
          echo "> '! ``[ `{.?firstname}` `{.?lastname}`]``'"
          xq get example.com/examples/mildred.map \
          '! ``[ `{.?firstname}` `{.?lastname}`]``'
          printf %60s | tr ' ' '-' && echo
      - name: Update Insert [ xq update {db-uri} insert ... ]
        run: |
          echo ' update db document, with insert expression'
          echo -n "*reference check* employee[3] hours worked: "
          xq get example.com/examples/works.xml '//employee[3]/hours => sum()'
          echo -n "*reference check* all employee hours: "
          xq get example.com/examples/works.xml '//employee/hours => sum()'
          echo ' *insert example*: add more hours for employee[3]'
          echo "> xq update example.com/examples/works.xml insert node '<hours>40</hours>' into '//employee[3]'"
          xq update example.com/examples/works.xml insert node '<hours>40</hours>' into '//employee[3]'
          echo -n ' *update check*: employee[3] hours worked: '
          xq get example.com/examples/works.xml '//employee[3]/hours => sum()'
          echo -n ' *update check*: all employee hours worked: '
          xq get example.com/examples/works.xml '//employee/hours => sum()'
          printf %60s | tr ' ' '-' && echo
      - name: Update Replace [ xq update {db-uri} replace ]
        run: |
          echo ' update db document, with replace expression'
          echo -n 'reference check: employee[1] hours worked: '
          xq get example.com/examples/works.xml '//employee[1]/hours'
          echo 'example 1: - correct the hours for employee[1]'
          echo "> xq update example.com/examples/works.xml replace node '//employee[1]/hours[1]'  with '<hours>25</hours>'"
          xq update example.com/examples/works.xml replace node '//employee[1]/hours[1]' with '<hours>25</hours>'
          echo -n 'update check: check employee[1] hours'
          xq get example.com/examples/works.xml '//employee[1]/hours'
          echo 'example 2: - alter the hour value for employee[1]'
          echo "> xq update example.com/examples/works.xml replace 'value of node' '//employee[1]/hours[1]' with '\"30\"'"
          xq update example.com/examples/works.xml replace 'value of node' '//employee[1]/hours[1]' with '"30"'
          echo -n 'update check: check employee[1] hours'
          xq get example.com/examples/works.xml '//employee[1]/hours'
          printf %60s | tr ' ' '-' && echo
      - name: Update Delete [ xq update {db-uri} delete ... ]
        run: |
          echo ' update db document, with delete expression'
          echo -n 'reference check: employee[2] hours worked: '
          xq get example.com/examples/works.xml '//employee[2]/hours => sum()'
          echo 'example: delete first lot of hours for employee[2]'
          echo "> xq update example.com/examples/works.xml delete node '//employee[2]/hours[1]'"
          xq update example.com/examples/works.xml delete node '//employee[2]/hours[1]'
          echo -n 'update check: employee[2] hours worked: '
          xq get example.com/examples/works.xml '//employee[2]/hours => sum()'
          printf %60s | tr ' ' '-' && echo
      - name: Update Rename [ xq update {db-uri} rename ... ]
        run: |
          echo 'update db document, with rename expressions'
          echo ' - check first works node'
          xq get example.com/examples/works.xml '/works/*[1]'
          echo ' - rename employee tag to contractor'
          echo "> xq update example.com/examples/works.xml rename node '/works/*[1]' as '\"contactor\"'"
          xq update example.com/examples/works.xml rename node '/works/*[1]' as '"contactor"'
          echo ' - update result: check first works node'
          xq get example.com/examples/works.xml '/works/*[1]'
          echo ' - update result: check contractor hours'
          xq get example.com/examples/works.xml '//contactor/hours => sum()'
          echo ' - update result: check employee hours'
          xq get example.com/examples/works.xml '//employee/hours => sum()'
          echo ' - update result: check all hours worked'
          xq get example.com/examples/works.xml '/works/*/hours => sum()'
          printf %60s | tr ' ' '-' && echo
      - name: Delete [ xq delete {db-uri} ]
        run: |
          echo ' delete item, from db collection'
          echo 'reference check: get colors.array'
          xq get example.com/examples/colors.array
          echo 'example: delete colors.array item from db'
          echo '> xq delete example.com/examples/colors.array'
          xq delete example.com/examples/colors.array
          echo 'delete check: get colors.array'
          xq get example.com/examples/colors.array || true
          echo ' - you can also delete db link items'
          echo 'note: deleting a link item will not delete the file it references'
          echo '> xq delete http://example.com/icons/article.svgz'
          xq delete http://example.com/icons/article.svgz
          echo 'delete check: list icons'
          xq list http://example.com/icons
      - name: Delete Collection [ xq delete collection {db-uri} ]
        run: |
          echo ' delete item, from db collection'
          echo 'reference check: list examples collection'
          xq list example.com/examples
          echo 'example: delete examples collection'
          echo '> xq delete collection example.com/examples'
          xq delete collection example.com/examples
          echo 'delete collection check: try to list examples collection'
          xq list example.com/examples

